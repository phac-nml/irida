<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.6.8</version>
    <relativePath />
  </parent>
  <groupId>ca.corefacility.bioinformatics</groupId>
  <artifactId>irida</artifactId>
  <packaging>war</packaging>
  <version>22.05-SNAPSHOT</version>
  <name>irida</name>
  <url>http://www.irida.ca</url>

  <issueManagement>
    <system>GitLab</system>
    <url>https://github.com/phac-nml/irida/issues</url>
  </issueManagement>

  <scm>
    <connection>scm:git:https://github.com/phac-nml/irida.git</connection>
    <developerConnection>scm:git:ssh://git@github.com:phac-nml/irida.git</developerConnection>
    <url>https://github.com/phac-nml/irida</url>
  </scm>

  <inceptionYear>2013</inceptionYear>

  <developers>
    <developer>
      <id>eric</id>
      <name>Eric Enns</name>
      <email>eric.enns@phac-aspc.gc.ca</email>
      <organization>Public Health Agency of Canada</organization>
      <organizationUrl>https://www.canada.ca/en/public-health.html</organizationUrl>
    </developer>
    <developer>
      <id>aaron</id>
      <name>Aaron Petkau</name>
      <email>aaron.petkau@phac-aspc.gc.ca</email>
      <organization>Public Health Agency of Canada</organization>
      <organizationUrl>https://www.canada.ca/en/public-health.html</organizationUrl>
    </developer>
    <developer>
      <id>josh</id>
      <name>Josh Adam</name>
      <email>josh.adam@phac-aspc.gc.ca</email>
      <organization>Public Health Agency of Canada</organization>
      <organizationUrl>https://www.canada.ca/en/public-health.html</organizationUrl>
    </developer>
    <developer>
      <id>deep</id>
      <name>Sukhdeep Sidhu</name>
      <email>sukhdeep.sidhu@phac-aspc.gc.ca</email>
      <organization>Public Health Agency of Canada</organization>
      <organizationUrl>https://www.canada.ca/en/public-health.html</organizationUrl>
    </developer>
    <developer>
      <id>jeff</id>
      <name>Jeffrey Thiessen</name>
      <email>jeffrey.thiessen@phac-aspc.gc.ca</email>
      <organization>Public Health Agency of Canada</organization>
      <organizationUrl>https://www.canada.ca/en/public-health.html</organizationUrl>
    </developer>
    <developer>
      <id>katherine</id>
      <name>Katherine Thiessen</name>
      <email>katherine.thiessen@phac-aspc.gc.ca</email>
      <organization>Public Health Agency of Canada</organization>
      <organizationUrl>https://www.canada.ca/en/public-health.html</organizationUrl>
    </developer>
  </developers>
  <contributors>
    <contributor>
      <name>Franklin Bristow</name>
      <roles>
        <role>Emeritus</role>
      </roles>
    </contributor>
    <contributor>
      <name>Thomas Matthews</name>
      <roles>
        <role>Emeritus</role>
      </roles>
    </contributor>
  </contributors>
  <repositories>
    <!-- Use maven central over HTTPS instead of HTTP -->
    <repository>
      <id>central</id>
      <url>https://repo1.maven.org/maven2</url>
      <releases>
        <enabled>true</enabled>
      </releases>
    </repository>
    <!-- https://spring.io/blog/2020/10/29/notice-of-permissions-changes-to-repo-spring-io-fall-and-winter-2020 -->
    <repository>
      <id>spring-milestones</id>
      <url>https://repo.spring.io/milestone/</url>
    </repository>
    <repository>
      <id>clojars.org</id>
      <url>https://clojars.org/repo</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <!-- Use maven central over HTTPS instead of HTTP -->
    <pluginRepository>
      <id>central</id>
      <url>https://repo1.maven.org/maven2</url>
      <releases>
        <enabled>true</enabled>
      </releases>
    </pluginRepository>
  </pluginRepositories>

  <dependencies>
    <!-- Spring Core Framework -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.apache.logging.log4j</groupId>
          <artifactId>log4j-to-slf4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>

    <!-- Security -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.oltu.oauth2</groupId>
      <artifactId>org.apache.oltu.oauth2.client</artifactId>
      <version>${oltu.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Database -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-envers</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-envers</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-dbcp2</artifactId>
      <type>jar</type>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>commons-net</groupId>
      <artifactId>commons-net</artifactId>
      <version>${commons.net.version}</version>
    </dependency>

    <!-- RDF Database -->
    <dependency>
      <groupId>org.apache.jena</groupId>
      <artifactId>jena-tdb</artifactId>
      <version>${apache.jena.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>xml-apis</artifactId>
          <groupId>xml-apis</groupId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>jcl-over-slf4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.jena</groupId>
      <artifactId>jena-text</artifactId>
      <version>${apache.jena.version}</version>
      <exclusions>
        <exclusion>
          <groupId>xml-apis</groupId>
          <artifactId>xml-apis</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
        </exclusion>
        <exclusion>
          <groupId>log4j</groupId>
          <artifactId>log4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Web -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web-services</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-hateoas</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security.oauth</groupId>
      <artifactId>spring-security-oauth2</artifactId>
      <version>${spring.security.oauth.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.codehaus.jackson</groupId>
          <artifactId>jackson-mapper-asl</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons.io.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>${commons.fileupload.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>${apache.poi.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>stax-api</artifactId>
          <groupId>stax</groupId>
        </exclusion>
        <exclusion>
          <artifactId>log4j-api</artifactId>
          <groupId>org.apache.logging.log4j</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.thymeleaf</groupId>
      <artifactId>thymeleaf-spring5</artifactId>
    </dependency>
    <dependency>
      <groupId>org.thymeleaf.extras</groupId>
      <artifactId>thymeleaf-extras-springsecurity5</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.mxab.thymeleaf.extras</groupId>
      <artifactId>thymeleaf-extras-data-attribute</artifactId>
    </dependency>
    <dependency>
      <groupId>nz.net.ultraq.thymeleaf</groupId>
      <artifactId>thymeleaf-layout-dialect</artifactId>
    </dependency>
    <!-- https://mvnrepository.com/artifact/commons-beanutils/commons-beanutils -->
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <version>${commons.beanutils.version}</version>
    </dependency>


    <!-- Mail -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-mail</artifactId>
    </dependency>

    <!-- Testing -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-test-autoconfigure</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-launcher</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>rest-assured</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.rest-assured</groupId>
      <artifactId>json-path</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.springtestdbunit</groupId>
      <artifactId>spring-test-dbunit</artifactId>
      <version>${spring.test.dbunit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.dbunit</groupId>
      <artifactId>dbunit</artifactId>
      <version>${dbunit.version}</version>
      <type>jar</type>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-support</artifactId>
      <version>${selenium-driver.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.seleniumhq.selenium</groupId>
      <artifactId>selenium-chrome-driver</artifactId>
      <scope>test</scope>
      <version>${selenium-chrome-driver.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mockftpserver</groupId>
      <artifactId>MockFtpServer</artifactId>
      <version>${mockftpserver.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Logging -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-to-slf4j</artifactId>
    </dependency>

    <!-- Utilities -->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>${commons.cli.version}</version>
    </dependency>

    <dependency>
      <groupId>uk.ac.babraham</groupId>
      <artifactId>fastqc</artifactId>
      <version>${fastqc.version}</version>
    </dependency>

    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>${aspectj.version}</version>
    </dependency>
    <dependency>
      <groupId>org.biojava</groupId>
      <artifactId>biojava3-core</artifactId>
      <version>${biojava.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-csv</artifactId>
      <version>${commons-csv.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sksamuel.diff</groupId>
      <artifactId>diff</artifactId>
      <version>1.1.11</version>
    </dependency>

    <dependency>
      <groupId>org.pf4j</groupId>
      <artifactId>pf4j</artifactId>
      <version>${pf4j.version}</version>
    </dependency>

    <!-- Galaxy -->
    <dependency>
      <groupId>com.github.jmchilton.blend4j</groupId>
      <artifactId>blend4j</artifactId>
      <version>${com.github.jmchilton.blend4j.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>stax-api</artifactId>
          <groupId>javax.xml.stream</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jaxb-impl</artifactId>
          <groupId>com.sun.xml.bind</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Clojure nREPL -->
    <dependency>
      <groupId>net.matlux</groupId>
      <artifactId>jvm-breakglass</artifactId>
      <version>${jvm-breakglass.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.pjfanning</groupId>
      <artifactId>excel-streaming-reader</artifactId>
      <version>${com.github.pjfanning.excel-streaming-reader.version}</version>
    </dependency>
    <!-- Generates the OpenAPI rest service definition located at http://localhost:8080/v3/api-docs -->
    <!-- https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui -->
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-webmvc-core</artifactId>
      <version>${org.springdoc.openapi.webmvc.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>jakarta.xml.bind-api</artifactId>
          <groupId>jakarta.xml.bind</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jakarta.validation-api</artifactId>
          <groupId>jakarta.validation</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-tomcat</artifactId>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>irida-${project.version}</finalName>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${maven.build.helper.plugin.version}</version>
        <executions>
          <execution>
            <id>reserve-ports</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>reserve-network-port</goal>
            </goals>
            <configuration>
              <portNames>
                <portName>server.port</portName>
              </portNames>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <wait>1000</wait>
          <maxAttempts>1000</maxAttempts>
          <jvmArguments>${failsafeArgLine}</jvmArguments>
        </configuration>
        <executions>
          <execution>
            <id>pre-integration-test</id>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <skip>${tomcat.skip}</skip>
              <systemPropertyVariables>
                <spring.profiles.active>it</spring.profiles.active>
                <irida.db.profile>it</irida.db.profile>
                <server.port>${server.port}</server.port>
                <server.base.url>http://localhost:${server.port}</server.base.url>
              </systemPropertyVariables>
            </configuration>
          </execution>
          <execution>
            <id>post-integration-test</id>
            <goals>
              <goal>stop</goal>
            </goals>
            <configuration>
              <skip>${tomcat.skip}</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>${maven.failsafe.plugin.version}</version>
        <configuration>
          <encoding>UTF-8</encoding>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <!--suppress UnresolvedMavenProperty -->
              <groups>${include.tags}</groups>
              <!--suppress UnresolvedMavenProperty -->
              <argLine>${failsafeArgLine}</argLine>
              <systemPropertyVariables>
                <junit.platform.execution.listeners.deactivate>${exclude.test.listeners}
</junit.platform.execution.listeners.deactivate>
                <spring.profiles.active>test</spring.profiles.active>
                <irida.db.profile>it</irida.db.profile>
              </systemPropertyVariables>
              <rerunFailingTestsCount>5</rerunFailingTestsCount>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven.surefire.plugin.version}</version>
        <configuration>
          <useSystemClassLoader>false</useSystemClassLoader>
          <systemPropertyVariables>
            <junit.platform.execution.listeners.deactivate>
							ca.corefacility.bioinformatics.irida.junit5.listeners.Integration*
</junit.platform.execution.listeners.deactivate>
          </systemPropertyVariables>
          <!--suppress UnresolvedMavenProperty -->
          <argLine>${surefireArgLine}</argLine>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>test</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Maven compiler plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven.compiler.plugin.version}</version>
        <configuration>
          <source>${java.version}</source>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven.javadoc.plugin.version}</version>
        <executions>
          <execution>
            <id>generate-doc</id>
            <phase>pre-site</phase>
            <goals>
              <goal>javadoc</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <outputDirectory>doc/developer/apidocs/</outputDirectory>
          <reportOutputDirectory>doc/developer/apidocs/</reportOutputDirectory>
          <quiet>true</quiet>
          <doclint>all</doclint>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven.checkstyle.plugin.version}</version>
        <executions>
          <execution>
            <id>validate</id>
            <phase>pre-site</phase>
            <configuration>
              <configLocation>checkstyle.xml</configLocation>
              <encoding>UTF-8</encoding>
              <consoleOutput>true</consoleOutput>
              <failsOnError>true</failsOnError>
            </configuration>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${maven.jacoco.plugin.version}</version>
        <configuration>
          <excludes>
            <exclude>**/model/**</exclude>
            <exclude>**/config/**</exclude>
            <exclude>**/exceptions/**</exclude>
            <exclude>**/util/**</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <id>pre-unit-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
              <propertyName>surefireArgLine</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut/</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>pre-integration-test</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <destFile>${jacoco.it.execution.data.file}</destFile>
              <propertyName>failsafeArgLine</propertyName>
            </configuration>
          </execution>
          <execution>
            <id>post-integration-test</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>${jacoco.it.execution.data.file}</dataFile>
              <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase-maven-plugin</artifactId>
        <version>${maven.liquibase.plugin.version}</version>
        <configuration>
          <propertyFile>${liquibase.config.file}</propertyFile>
          <promptOnNonLocalDatabase>${liquibase.config.prompt}</promptOnNonLocalDatabase>
          <driver>${liquibase.config.driver}</driver>
          <url>${liquibase.config.url}</url>
          <username>${liquibase.config.username}</username>
          <password>${liquibase.config.password}</password>
          <changeLogFile>${liquibase.config.changeLogFile}</changeLogFile>
        </configuration>
      </plugin>

      <!-- Maven WAR plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>${maven.war.plugin.version}</version>
        <configuration>
          <failOnMissingWebXml>false</failOnMissingWebXml>
          <packagingExcludes>
						node_modules/,
						.yarn/,
						resources/css/,
						resources/js/
</packagingExcludes>
          <attachClasses>true</attachClasses>
        </configuration>
      </plugin>

      <!-- Build irida.zip distribution -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${maven.assembly.plugin.version}</version>
        <executions>
          <execution>
            <id>zip-distributable</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptors>
                <descriptor>${basedir}/packaging/assembly/zip-distributable.xml</descriptor>
              </descriptors>
              <appendAssemblyId>false</appendAssemblyId>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${maven.exec.plugin.version}</version>
        <executions>
          <!-- Generate tools-list.yml file to include in package -->
          <execution>
            <id>exec-tools-list-export</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>ca.corefacility.bioinformatics.irida.util.ToolsListExporter</mainClass>
              <arguments>
                <argument>${project.build.directory}/tools-list.yml</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>${maven.site.plugin.version}</version>
        <configuration>
          <!-- straight-up skip maven's site generation. We're taking over the
						site phase to generate documentation with jekyll outside of maven. -->
          <skip>true</skip>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>${frontend-maven-plugin.version}</version>

        <!-- optional -->
        <configuration>
          <workingDirectory>src/main/webapp</workingDirectory>
        </configuration>

        <executions>
          <execution>
            <goals>
              <goal>install-node-and-yarn</goal>
            </goals>
            <configuration>
              <nodeVersion>${node.version}</nodeVersion>
              <yarnVersion>${yarn.version}</yarnVersion>
            </configuration>
          </execution>

          <execution>
            <id>yarn install</id>
            <goals>
              <goal>yarn</goal>
            </goals>
            <configuration>
              <!-- optional: The default argument is actually
                            "install", so unless you need to run some other yarn command,
                            you can remove this whole <configuration> section.
                            -->
              <arguments>install</arguments>
            </configuration>
          </execution>
          <execution>
            <id>yarn build production</id>
            <goals>
              <goal>yarn</goal>
            </goals>
            <configuration>
              <arguments>build</arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Generates the OpenAPI rest service definition file during build time -->
      <plugin>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-maven-plugin</artifactId>
        <version>${org.springdoc.openapi.maven.version}</version>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <apiDocsUrl>http://localhost:${server.port}/v3/api-docs</apiDocsUrl>
          <outputFileName>open-api.json</outputFileName>
          <outputDir>doc/swagger-ui</outputDir>
          <skip>${tomcat.skip}</skip>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <properties>
    <java.version>11</java.version>
    <maven.compiler.release>11</maven.compiler.release>

    <!-- Dependencies -->
    <commons.cli.version>1.2</commons.cli.version>
    <commons.io.version>2.11.0</commons.io.version>
    <guava.version>31.0.1-jre</guava.version>
    <spring.security.oauth.version>2.3.6.RELEASE</spring.security.oauth.version>
    <spring.test.dbunit.version>1.3.0</spring.test.dbunit.version>
    <dbunit.version>2.7.2</dbunit.version>
    <commons.net.version>3.8.0</commons.net.version>
    <fastqc.version>0.11.9-nml-custom</fastqc.version>
    <com.github.jmchilton.blend4j.version>0.2.1-2201df9</com.github.jmchilton.blend4j.version>
    <apache.jena.version>4.3.2</apache.jena.version>
    <commons-csv.version>1.8</commons-csv.version>
    <biojava.version>3.0</biojava.version>
    <commons.fileupload.version>1.4</commons.fileupload.version>
    <oltu.version>1.0.0</oltu.version>
    <apache.poi.version>5.2.2</apache.poi.version>
    <selenium-driver.version>3.141.59</selenium-driver.version>
    <selenium-chrome-driver.version>3.141.59</selenium-chrome-driver.version>
    <mockftpserver.version>2.6</mockftpserver.version>
    <jvm-breakglass.version>0.0.8</jvm-breakglass.version>
    <pf4j.version>2.4.0</pf4j.version>
    <com.github.pjfanning.excel-streaming-reader.version>3.6.1</com.github.pjfanning.excel-streaming-reader.version>
    <org.springdoc.openapi.webmvc.version>1.5.6</org.springdoc.openapi.webmvc.version>
    <commons.beanutils.version>1.9.4</commons.beanutils.version>

    <!-- plugins -->
    <maven.failsafe.plugin.version>3.0.0-M5</maven.failsafe.plugin.version>
    <maven.surefire.plugin.version>3.0.0-M5</maven.surefire.plugin.version>
    <maven.javadoc.plugin.version>3.1.0</maven.javadoc.plugin.version>
    <maven.checkstyle.plugin.version>3.0.0</maven.checkstyle.plugin.version>
    <maven.jacoco.plugin.version>0.8.3</maven.jacoco.plugin.version>
    <maven.compiler.plugin.version>3.8.0</maven.compiler.plugin.version>
    <maven.liquibase.plugin.version>${liquibase.version}</maven.liquibase.plugin.version>
    <maven.war.plugin.version>3.2.2</maven.war.plugin.version>
    <maven.exec.plugin.version>1.6.0</maven.exec.plugin.version>
    <maven.assembly.plugin.version>3.1.1</maven.assembly.plugin.version>
    <maven.build.helper.plugin.version>3.0.0</maven.build.helper.plugin.version>
    <maven.site.plugin.version>3.7.1</maven.site.plugin.version>
    <maven-resources-plugin.version>2.6</maven-resources-plugin.version>
    <errorprone.version>2.5</errorprone.version>
    <frontend-maven-plugin.version>1.12.1</frontend-maven-plugin.version>
    <node.version>v16.15.0</node.version>
    <yarn.version>v1.22.17</yarn.version>
    <org.springdoc.openapi.maven.version>1.3</org.springdoc.openapi.maven.version>

    <!-- project configuration -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- liquibase configuration -->
    <liquibase.config.file>src/main/resources/liquibase.properties</liquibase.config.file>
    <liquibase.config.prompt>true</liquibase.config.prompt>
    <liquibase.config.driver>com.mysql.jdbc.Driver</liquibase.config.driver>
    <liquibase.config.url>jdbc:mysql://localhost:3306/irida_test</liquibase.config.url>
    <liquibase.config.username>test</liquibase.config.username>
    <liquibase.config.password>test</liquibase.config.password>
    <liquibase.config.changeLogFile>ca/corefacility/bioinformatics/irida/database/all-changes.xml
</liquibase.config.changeLogFile>

    <!-- URL to a pre-populated SQLite database for Galaxy -->
    <!-- Set to 'local' to use the local version stored in irida-api, or set
			this to a URL -->
    <test.galaxy.database>local</test.galaxy.database>

  </properties>

  <profiles>
    <profile>
      <id>ui_testing</id>
      <properties>
        <include.tags>
          <![CDATA[IntegrationTest & UI]]>
        </include.tags>
        <tomcat.skip>true</tomcat.skip>
        <exclude.test.listeners>
					ca.corefacility.bioinformatics.irida.junit5.listeners.UnitTestListener,
</exclude.test.listeners>
      </properties>
    </profile>
    <profile>
      <id>service_testing</id>
      <properties>
        <include.tags>
          <![CDATA[IntegrationTest & Service]]>
        </include.tags>
        <tomcat.skip>true</tomcat.skip>
        <exclude.test.listeners>
					ca.corefacility.bioinformatics.irida.junit5.listeners.UnitTestListener,
					ca.corefacility.bioinformatics.irida.junit5.listeners.IntegrationUITestListener,
</exclude.test.listeners>
      </properties>
    </profile>
    <profile>
      <id>rest_testing</id>
      <properties>
        <include.tags>
          <![CDATA[IntegrationTest & Rest]]>
        </include.tags>
        <tomcat.skip>true</tomcat.skip>
        <exclude.test.listeners>
					ca.corefacility.bioinformatics.irida.junit5.listeners.UnitTestListener,
					ca.corefacility.bioinformatics.irida.junit5.listeners.IntegrationUITestListener,
</exclude.test.listeners>
      </properties>
    </profile>
    <profile>
      <id>galaxy_testing</id>
      <properties>
        <include.tags>
          <![CDATA[IntegrationTest & Galaxy & !Pipeline]]>
        </include.tags>
        <tomcat.skip>true</tomcat.skip>
        <exclude.test.listeners>
					ca.corefacility.bioinformatics.irida.junit5.listeners.UnitTestListener,
					ca.corefacility.bioinformatics.irida.junit5.listeners.IntegrationUITestListener,
</exclude.test.listeners>
      </properties>
    </profile>
    <profile>
      <id>galaxy_pipeline_testing</id>
      <properties>
        <include.tags>
          <![CDATA[IntegrationTest & Galaxy & Pipeline]]>
        </include.tags>
        <tomcat.skip>true</tomcat.skip>
        <exclude.test.listeners>
					ca.corefacility.bioinformatics.irida.junit5.listeners.UnitTestListener,
					ca.corefacility.bioinformatics.irida.junit5.listeners.IntegrationUITestListener,
</exclude.test.listeners>
      </properties>
    </profile>
    <profile>
      <id>all_testing</id>
      <properties>
        <include.tags>IntegrationTest</include.tags>
        <tomcat.skip>true</tomcat.skip>
        <exclude.test.listeners>
					ca.corefacility.bioinformatics.irida.junit5.listeners.UnitTestListener
</exclude.test.listeners>
      </properties>
    </profile>
  </profiles>
</project>
