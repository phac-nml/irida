<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>ca.corefacility.bioinformatics</groupId>
	<artifactId>irida</artifactId>
	<packaging>war</packaging>
	<version>20.05-SNAPSHOT</version>
	<name>irida</name>
	<url>http://www.irida.ca</url>

	<issueManagement>
		<system>GitLab</system>
		<url>https://github.com/phac-nml/irida/issues</url>
	</issueManagement>

	<scm>
		<connection>scm:git:https://github.com/phac-nml/irida.git</connection>
		<developerConnection>scm:git:ssh://git@github.com:phac-nml/irida.git</developerConnection>
		<url>https://github.com/phac-nml/irida</url>
	</scm>

	<inceptionYear>2013</inceptionYear>

	<developers>
		<developer>
			<id>aaron</id>
			<name>Aaron Petkau</name>
			<email>aaron.petkau@canada.ca</email>
			<organization>Public Health Agency of Canada</organization>
			<organizationUrl>https://www.canada.ca/en/public-health.html</organizationUrl>
		</developer>
		<developer>
			<id>josh</id>
			<name>Josh Adam</name>
			<email>josh.adam@canada.ca</email>
			<organization>Public Health Agency of Canada</organization>
			<organizationUrl>https://www.canada.ca/en/public-health.html</organizationUrl>
		</developer>
		<developer>
			<id>tom</id>
			<name>Thomas Matthews</name>
			<email>thomas.matthews@canada.ca</email>
			<organization>Public Health Agency of Canada</organization>
			<organizationUrl>https://www.canada.ca/en/public-health.html</organizationUrl>
		</developer>
		<developer>
			<id>deep</id>
			<name>Sukhdeep Sidhu</name>
			<email>sukhdeep.sidhu@canada.ca</email>
			<organization>Public Health Agency of Canada</organization>
			<organizationUrl>https://www.canada.ca/en/public-health.html</organizationUrl>
		</developer>
		<developer>
			<id>jeff</id>
			<name>Jeffrey Thiessen</name>
			<email>jeffrey.thiessen@canada.ca</email>
			<organization>Public Health Agency of Canada</organization>
			<organizationUrl>https://www.canada.ca/en/public-health.html</organizationUrl>
		</developer>
	</developers>
	<contributors>
		<contributor>
			<name>Franklin Bristow</name>
			<email>fbristow@cs.umanitoba.ca</email>
			<organization>Department of Computer Science - University of Manitoba</organization>
			<organizationUrl>https://www.cs.umanitoba.ca</organizationUrl>
			<roles>
				<role>developer</role>
			</roles>
		</contributor>
	</contributors>
	<repositories>
		<repository>
			<id>repo.springsource.org</id>
			<name>repo.springsource.org-releases</name>
			<url>https://repo.spring.io/libs-milestone-local</url>
		</repository>
		<!-- Use maven central over HTTPS instead of HTTP -->
		<repository>
			<id>central</id>
			<url>https://repo1.maven.org/maven2</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<url>https://repo.spring.io/libs-milestone/</url>
		</repository>
		<repository>
			<id>clojars.org</id>
			<url>https://clojars.org/repo</url>
		</repository>
	</repositories>

	<pluginRepositories>
		<!-- Use maven central over HTTPS instead of HTTP -->
		<pluginRepository>
			<id>central</id>
			<url>https://repo1.maven.org/maven2</url>
			<releases>
				<enabled>true</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>
		<!-- Spring Core Framework -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-jcl</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.aspectj</groupId>
					<artifactId>aspectjweaver</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>jsr250-api</artifactId>
			<version>${jsr250.api.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.oltu.oauth2</groupId>
			<artifactId>org.apache.oltu.oauth2.client</artifactId>
			<version>${oltu.version}</version>
		</dependency>

		<!-- Database -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring.version}</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-jpa</artifactId>
			<version>${spring.data.jpa.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.aspectj</groupId>
					<artifactId>aspectjrt</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-envers</artifactId>
			<version>${spring.data.envers.version}</version>
		</dependency>
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
			<version>${liquibase.version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.connector.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-envers</artifactId>
			<version>${hibernate.version}</version>
			<exclusions>
				<exclusion>
<!--					<groupId>org.jboss.logging</groupId>-->
					<artifactId>jboss-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>xml-apis</artifactId>
					<groupId>xml-apis</groupId>
				</exclusion>
				<exclusion>
					<artifactId>javax.activation-api</artifactId>
					<groupId>javax.activation</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>${commons.dbcp.version}</version>
			<type>jar</type>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-net</groupId>
			<artifactId>commons-net</artifactId>
			<version>${commons.net.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.interceptor</groupId>
			<artifactId>javax.interceptor-api</artifactId>
			<version>${javax.interceptor-api.version}</version>
		</dependency>

		<!-- RDF Database -->
		<dependency>
			<groupId>org.apache.jena</groupId>
			<artifactId>jena-tdb</artifactId>
			<version>${apache.jena.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>xml-apis</artifactId>
					<groupId>xml-apis</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.jena</groupId>
			<artifactId>jena-text</artifactId>
			<version>${apache.jena.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>xml-apis</artifactId>
					<groupId>xml-apis</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- This dependency is brought in by hibernate and jena with conflicting
			versions. Solution was to exclude it from both of their imports and import
			it explicitly. -->
		<dependency>
			<groupId>xml-apis</groupId>
			<artifactId>xml-apis</artifactId>
			<version>${xml.apis.version}</version>
		</dependency>

		<!-- Web -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-lang</groupId>
					<artifactId>commons-lang</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.hateoas</groupId>
			<artifactId>spring-hateoas</artifactId>
			<version>${spring.hateoas.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security.oauth</groupId>
			<artifactId>spring-security-oauth2</artifactId>
			<version>${spring.security.oauth.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.codehaus.jackson</groupId>
					<artifactId>jackson-mapper-asl</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
			<version>${jackson.dataformat.yaml.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${commons.fileupload.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>${apache.poi.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>stax-api</artifactId>
					<groupId>stax</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf-spring5</artifactId>
			<version>${thymeleaf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity4</artifactId>
			<version>${thymeleaf-extras-springsecurity4.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.mxab.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-data-attribute</artifactId>
			<version>${thymeleaf-extras-data-attribute.version}</version>
		</dependency>
		<dependency>
			<groupId>nz.net.ultraq.thymeleaf</groupId>
			<artifactId>thymeleaf-layout-dialect</artifactId>
			<version>${thymeleaf-layout-dialect.version}</version>
		</dependency>
		<dependency>
			<groupId>org.attoparser</groupId>
			<artifactId>attoparser</artifactId>
			<version>${attoparser.version}</version>
		</dependency>
		<dependency>
			<groupId>com.timgroup</groupId>
			<artifactId>jgravatar</artifactId>
			<version>${jgravatar.version}</version>
		</dependency>

		<!-- Mail -->
		<dependency>
			<groupId>com.sun.mail</groupId>
			<artifactId>javax.mail</artifactId>
			<version>${javax.mail.version}</version>
			<exclusions>
				<exclusion>
					<groupId>javax.activation</groupId>
					<artifactId>activation</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Servlet -->
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>javax.el-api</artifactId>
			<version>${javax.el-api.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${javax.servlet-api.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.el</groupId>
			<artifactId>el-ri</artifactId>
			<version>${el.ri.version}</version>
		</dependency>

		<!-- Testing -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<version>${hamcrest.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.ws</groupId>
			<artifactId>spring-ws-test</artifactId>
			<version>${spring.ws.test.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<version>${spring.security.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>${rest.assured.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.github.springtestdbunit</groupId>
			<artifactId>spring-test-dbunit</artifactId>
			<version>${spring.test.dbunit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>${dbunit.version}</version>
			<type>jar</type>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>${jsoup.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test-mvc-htmlunit</artifactId>
			<version>${spring-test-mvc-htmlunit.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-support</artifactId>
			<version>${selenium-driver.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-chrome-driver</artifactId>
			<scope>test</scope>
			<version>${selenium-chrome-driver.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mockftpserver</groupId>
			<artifactId>MockFtpServer</artifactId>
			<version>${mockftpserver.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>${jsonpath.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
		</dependency>

		<!-- Utilities -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>${commons.cli.version}</version>
		</dependency>
		<dependency>
			<groupId>uk.ac.babraham</groupId>
			<artifactId>fastqc</artifactId>
			<version>${fastqc.version}</version>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectj.version}</version>
		</dependency>
		<dependency>
			<groupId>org.biojava</groupId>
			<artifactId>biojava3-core</artifactId>
			<version>${biojava.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-csv</artifactId>
			<version>${commons-csv.version}</version>
		</dependency>
		<dependency>
			<groupId>com.sksamuel.diff</groupId>
			<artifactId>diff</artifactId>
			<version>1.1.11</version>
		</dependency>

		<dependency>
			<groupId>org.pf4j</groupId>
			<artifactId>pf4j</artifactId>
			<version>${pf4j.version}</version>
		</dependency>

		<dependency>
			<groupId>com.sun.activation</groupId>
			<artifactId>javax.activation</artifactId>
			<version>${javax.activation.version}</version>
		</dependency>

		<!-- Validation API -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate.validator.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.jboss.logging</groupId>
					<artifactId>jboss-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Galaxy -->
		<dependency>
			<groupId>com.github.jmchilton.blend4j</groupId>
			<artifactId>blend4j</artifactId>
			<version>${com.github.jmchilton.blend4j.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>stax-api</artifactId>
					<groupId>javax.xml.stream</groupId>
				</exclusion>
				<exclusion>
					<artifactId>jaxb-impl</artifactId>
					<groupId>com.sun.xml.bind</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Image manipulation -->
		<dependency>
			<groupId>org.imgscalr</groupId>
			<artifactId>imgscalr-lib</artifactId>
			<version>${imgscalr.version}</version>
		</dependency>

		<!-- Clojure nREPL -->
		<dependency>
			<groupId>net.matlux</groupId>
			<artifactId>jvm-breakglass</artifactId>
			<version>${jvm-breakglass.version}</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>irida-${project.version}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${maven.build.helper.plugin.version}</version>
				<executions>
					<execution>
						<id>reserve-ports</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>reserve-network-port</goal>
						</goals>
						<configuration>
							<portNames>
								<portName>jetty.port</portName>
							</portNames>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven.failsafe.plugin.version}</version>
				<configuration>
					<encoding>UTF-8</encoding>
					<properties>
						<property>
							<name>listener</name>
							<!--suppress UnresolvedMavenProperty -->
                            <value>
								${integration.test.listener}
							</value>
						</property>
					</properties>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<!-- Uncomment below to disable Galaxy integration tests -->
							<!-- <excludes> <exclude>/ca/corefacility/bioinformatics/irida/**/galaxy/**</exclude>
								<exclude>ca/corefacility/bioinformatics/irida/service/impl/integration/AnalysisExecutionScheduledTaskImplIT.java</exclude>
								</excludes> -->
							<includes>
								<!--suppress UnresolvedMavenProperty -->
                                <include>${include.tests}</include>
							</includes>
							<excludes>
								<!--suppress UnresolvedMavenProperty -->
                                <exclude>${exclude.tests}</exclude>
							</excludes>
							<!--suppress UnresolvedMavenProperty -->
                            <argLine>${failsafeArgLine}</argLine>
							<systemPropertyVariables>
								<jetty.port>${jetty.port}</jetty.port>
								<spring.profiles.active>it</spring.profiles.active>
								<irida.db.profile>it</irida.db.profile>
								<jetty.port>${jetty.port}</jetty.port>
								<server.base.url>http://localhost:${jetty.port}</server.base.url>
							</systemPropertyVariables>
							<rerunFailingTestsCount>5</rerunFailingTestsCount>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<configuration>
					<useSystemClassLoader>false</useSystemClassLoader>
					<properties>
						<property>
							<name>listener</name>
							<value>
								ca.corefacility.bioinformatics.irida.web.controller.test.listeners.UnitTestListener
							</value>
						</property>
					</properties>
					<!--suppress UnresolvedMavenProperty -->
                    <argLine>${surefireArgLine}</argLine>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Maven compiler plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven.javadoc.plugin.version}</version>
				<executions>
					<execution>
						<id>generate-doc</id>
						<phase>pre-site</phase>
						<goals>
							<goal>javadoc</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<outputDirectory>doc/_site/developer/apidocs/</outputDirectory>
					<reportOutputDirectory>doc/_site/developer/apidocs/</reportOutputDirectory>
					<quiet>true</quiet>
                    <doclint>all</doclint>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven.checkstyle.plugin.version}</version>
				<executions>
					<execution>
						<id>validate</id>
						<phase>pre-site</phase>
						<configuration>
							<configLocation>checkstyle.xml</configLocation>
							<encoding>UTF-8</encoding>
							<consoleOutput>true</consoleOutput>
							<failsOnError>true</failsOnError>
						</configuration>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${maven.jacoco.plugin.version}</version>
				<configuration>
					<excludes>
						<exclude>**/model/**</exclude>
						<exclude>**/config/**</exclude>
						<exclude>**/exceptions/**</exclude>
						<exclude>**/util/**</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-ut/</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>pre-integration-test</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${jacoco.it.execution.data.file}</destFile>
							<propertyName>failsafeArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>post-integration-test</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<dataFile>${jacoco.it.execution.data.file}</dataFile>
							<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.liquibase</groupId>
				<artifactId>liquibase-maven-plugin</artifactId>
				<version>${maven.liquibase.plugin.version}</version>
				<configuration>
					<propertyFile>${liquibase.config.file}</propertyFile>
					<promptOnNonLocalDatabase>${liquibase.config.prompt}</promptOnNonLocalDatabase>
					<driver>${liquibase.config.driver}</driver>
					<url>${liquibase.config.url}</url>
					<username>${liquibase.config.username}</username>
					<password>${liquibase.config.password}</password>
					<changeLogFile>${liquibase.config.changeLogFile}</changeLogFile>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.springframework</groupId>
						<artifactId>spring-beans</artifactId>
						<version>${spring.version}</version>
					</dependency>
					<dependency>
						<groupId>org.springframework</groupId>
						<artifactId>spring-context</artifactId>
						<version>${spring.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- Maven WAR plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${maven.war.plugin.version}</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<packagingExcludes>node_modules/**/*</packagingExcludes>
					<attachClasses>true</attachClasses>
				</configuration>
			</plugin>

			<!-- Build irida.zip distribution -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>${maven.assembly.plugin.version}</version>
				<executions>
					<execution>
						<id>zip-distributable</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
							<descriptor>${basedir}/packaging/assembly/zip-distributable.xml</descriptor>
							</descriptors>
							<appendAssemblyId>false</appendAssemblyId>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Jetty plugin -->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>${maven.jetty.plugin.version}</version>
				<configuration>
					<scanIntervalSeconds>0</scanIntervalSeconds>
					<stopPort>9966</stopPort>
					<stopKey>STOP</stopKey>
				</configuration>
				<executions>
					<execution>
						<id>start-jetty</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>stop</goal>
							<goal>start</goal>
						</goals>
						<configuration>
							<scanIntervalSeconds>0</scanIntervalSeconds>
							<stopPort>9966</stopPort>
							<stopKey>STOP</stopKey>
							<!--<daemon>true</daemon>-->
							<systemProperties>
								<systemProperty>
									<!-- Setting spring profile for integration tests to "it". Also
										done in failsafe plugin -->
									<name>spring.profiles.active</name>
									<value>it</value>
								</systemProperty>
								<systemProperty>
									<!-- Setting spring profile for integration tests to "it". Also
										done in failsafe plugin -->
									<name>irida.db.profile</name>
									<value>it</value>
								</systemProperty>
								<systemProperty>
									<name>jetty.port</name>
									<value>${jetty.port}</value>
								</systemProperty>
								<systemProperty>
									<name>server.base.url</name>
									<value>http://localhost:${jetty.port}</value>
								</systemProperty>
							</systemProperties>
						</configuration>
					</execution>
					<execution>
						<id>stop-jetty</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>${maven.exec.plugin.version}</version>
				<executions>
					<execution>
						<id>exec-jekyll-build</id>
						<phase>site</phase>
						<configuration>
							<executable>jekyll</executable>
							<workingDirectory>doc/</workingDirectory>
							<arguments>
								<argument>build</argument>
								<argument>--config</argument>
								<argument>_build-config.yml</argument>
							</arguments>
						</configuration>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
					<!-- Generate tools-list.yml file to include in package -->
					<execution>
						<id>exec-tools-list-export</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>java</goal>
						</goals>
						<configuration>
							<mainClass>ca.corefacility.bioinformatics.irida.util.ToolsListExporter</mainClass>
							<arguments>
								<argument>${project.build.directory}/tools-list.yml</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${maven.site.plugin.version}</version>
				<configuration>
					<!-- straight-up skip maven's site generation. We're taking over the
						site phase to generate documentation with jekyll outside of maven. -->
					<skip>true</skip>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>${frontend-maven-plugin.version}</version>

				<!-- optional -->
				<configuration>
					<workingDirectory>src/main/webapp</workingDirectory>
				</configuration>

				<executions>
					<execution>
						<goals>
							<goal>install-node-and-yarn</goal>
						</goals>
						<configuration>
							<nodeVersion>${node.version}</nodeVersion>
							<yarnVersion>${yarn.version}</yarnVersion>
						</configuration>
					</execution>

					<execution>
						<id>yarn install</id>
						<goals>
							<goal>yarn</goal>
						</goals>
						<configuration>
							<!-- optional: The default argument is actually
                            "install", so unless you need to run some other yarn command,
                            you can remove this whole <configuration> section.
                            -->
							<arguments>install</arguments>
						</configuration>
					</execution>
					<execution>
						<id>bower install</id>
						<goals>
							<goal>bower</goal>
						</goals>
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>
					<execution>
						<id>yarn build production</id>
						<goals>
							<goal>yarn</goal>
						</goals>
						<configuration>
							<arguments>build</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<properties>
		<java.version>11</java.version>
		<maven.compiler.release>11</maven.compiler.release>

		<!-- Dependencies -->
		<commons.cli.version>1.2</commons.cli.version>
		<junit.version>4.12</junit.version>
		<slf4j.version>1.7.26</slf4j.version>
		<guava.version>28.0-jre</guava.version>
		<spring.version>5.2.2.RELEASE</spring.version>
		<spring.security.version>5.2.1.RELEASE</spring.security.version>
		<spring.data.jpa.version>2.2.0.RELEASE</spring.data.jpa.version>
		<spring.security.oauth.version>2.3.6.RELEASE</spring.security.oauth.version>
		<spring.data.envers.version>2.2.0.RELEASE</spring.data.envers.version>
		<spring.ws.test.version>3.0.7.RELEASE</spring.ws.test.version>
		<mockito.version>1.10.19</mockito.version>
		<mysql.connector.version>5.1.31</mysql.connector.version>
		<hibernate.version>5.4.7.Final</hibernate.version>
		<jsr250.api.version>1.0</jsr250.api.version>
		<spring.test.dbunit.version>1.1.0</spring.test.dbunit.version>
		<dbunit.version>2.4.9</dbunit.version>
		<commons.dbcp.version>2.0.1</commons.dbcp.version>
		<commons.net.version>3.6</commons.net.version>
		<fastqc.version>0.11.7-nml-custom</fastqc.version>
		<aspectj.version>1.8.2</aspectj.version>
		<hibernate.validator.version>5.4.3.Final</hibernate.validator.version>
		<el-ri.version>1.0</el-ri.version>
		<com.github.jmchilton.blend4j.version>0.2.0</com.github.jmchilton.blend4j.version>
		<apache.jena.version>3.12.0</apache.jena.version>
		<commons-csv.version>1.4</commons-csv.version>
		<xml.apis.version>1.4.01</xml.apis.version>
		<liquibase.version>3.5.1</liquibase.version>
		<biojava.version>3.0</biojava.version>
		<jackson.version>2.9.10</jackson.version>
		<rest.assured.version>2.3.4</rest.assured.version>
		<commons.fileupload.version>1.3.1</commons.fileupload.version>
		<javax.el-api.version>3.0.0</javax.el-api.version>
		<javax.servlet-api.version>3.1.0</javax.servlet-api.version>
		<spring.hateoas.version>0.19.0.RELEASE</spring.hateoas.version>
		<el.ri.version>1.0</el.ri.version>
		<oltu.version>1.0.0</oltu.version>
		<thymeleaf.version>3.0.9.RELEASE</thymeleaf.version>
		<thymeleaf-extras-data-attribute.version>2.0.1</thymeleaf-extras-data-attribute.version>
		<thymeleaf-layout-dialect.version>2.2.2</thymeleaf-layout-dialect.version>
		<thymeleaf-extras-springsecurity4.version>3.0.2.RELEASE</thymeleaf-extras-springsecurity4.version>
		<apache.poi.version>3.17</apache.poi.version>
		<javax.mail.version>1.6.2</javax.mail.version>
		<jsoup.version>1.7.3</jsoup.version>
		<spring-test-mvc-htmlunit.version>1.0.0.M1</spring-test-mvc-htmlunit.version>
		<selenium-driver.version>3.141.59</selenium-driver.version>
		<selenium-chrome-driver.version>3.141.59</selenium-chrome-driver.version>
		<attoparser.version>2.0.4.RELEASE</attoparser.version>
		<javax.interceptor-api.version>3.1</javax.interceptor-api.version>
		<powermock.version>1.6.2</powermock.version>
		<mockftpserver.version>2.6</mockftpserver.version>
		<jsonpath.version>2.4.0</jsonpath.version>
		<imgscalr.version>4.2</imgscalr.version>
		<jackson.dataformat.yaml.version>2.7.4</jackson.dataformat.yaml.version>
		<jvm-breakglass.version>0.0.8</jvm-breakglass.version>
		<pf4j.version>2.4.0</pf4j.version>
		<hamcrest.version>1.3</hamcrest.version>
		<javax.activation.version>1.2.0</javax.activation.version>

		<!-- plugins -->
		<maven.failsafe.plugin.version>2.22.1</maven.failsafe.plugin.version>
		<maven.surefire.plugin.version>2.22.1</maven.surefire.plugin.version>
		<maven.javadoc.plugin.version>3.1.0</maven.javadoc.plugin.version>
		<maven.checkstyle.plugin.version>3.0.0</maven.checkstyle.plugin.version>
		<maven.jacoco.plugin.version>0.8.3</maven.jacoco.plugin.version>
		<maven.compiler.plugin.version>3.8.0</maven.compiler.plugin.version>
		<maven.liquibase.plugin.version>${liquibase.version}</maven.liquibase.plugin.version>
		<maven.war.plugin.version>3.2.2</maven.war.plugin.version>
		<maven.jetty.plugin.version>9.4.17.v20190418</maven.jetty.plugin.version>
		<maven.exec.plugin.version>1.6.0</maven.exec.plugin.version>
		<maven.assembly.plugin.version>3.1.1</maven.assembly.plugin.version>
		<maven.build.helper.plugin.version>3.0.0</maven.build.helper.plugin.version>
		<maven.site.plugin.version>3.7.1</maven.site.plugin.version>
		<errorprone.version>2.5</errorprone.version>
		<frontend-maven-plugin.version>1.7.6</frontend-maven-plugin.version>
		<node.version>v12.13.0</node.version>
		<yarn.version>v1.21.1</yarn.version>
		<jgravatar.version>1.0</jgravatar.version>

		<!-- project configuration -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- liquibase configuration -->
		<liquibase.config.file>src/main/resources/liquibase.properties</liquibase.config.file>
		<liquibase.config.prompt>true</liquibase.config.prompt>
		<liquibase.config.driver>com.mysql.jdbc.Driver</liquibase.config.driver>
		<liquibase.config.url>jdbc:mysql://localhost:3306/irida_test</liquibase.config.url>
		<liquibase.config.username>test</liquibase.config.username>
		<liquibase.config.password>test</liquibase.config.password>
		<liquibase.config.changeLogFile>ca/corefacility/bioinformatics/irida/database/all-changes.xml</liquibase.config.changeLogFile>

		<!-- URL to a pre-populated SQLite database for Galaxy -->
		<!-- Set to 'local' to use the local version stored in irida-api, or set 
			this to a URL -->
		<test.galaxy.database>local</test.galaxy.database>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

	</properties>

	<profiles>
		<profile>
			<id>ui_testing</id>
			<properties>
				<integration.test.listener>ca.corefacility.bioinformatics.irida.web.controller.test.listeners.IntegrationUITestListener</integration.test.listener>
				<include.tests>**/ria/integration/**/*IT.java</include.tests>
			</properties>
		</profile>
		<profile>
			<id>service_testing</id>
			<properties>
				<include.tests>
					**/service/impl/integration/**/*IT.java,
					**/service/workflow/integration/**/*IT.java,
					**/pipeline/results/**/*IT.java,
					**/repositories/**/*IT.java
				</include.tests>
				<exclude.tests>**/*Galaxy*IT.java,
					**/AnalysisExecutionScheduledTaskImplIT.java,
					**/AnalysisSubmissionServiceImplIT.java,
				</exclude.tests>
				<jetty.skip>true</jetty.skip>
			</properties>
		</profile>
		<profile>
			<id>rest_testing</id>
			<properties>
				<integration.test.listener>ca.corefacility.bioinformatics.irida.web.controller.test.listeners.IntegrationTestListener</integration.test.listener>
				<include.tests>**/web/controller/test/integration/**/*IT.java</include.tests>
			</properties>
		</profile>
		<profile>
			<id>galaxy_testing</id>
			<properties>
				<integration.test.listener>ca.corefacility.bioinformatics.irida.web.controller.test.listeners.IntegrationTestListener</integration.test.listener>
				<include.tests>
					**/*Galaxy*IT.java,
					**/AnalysisSubmissionServiceImplIT.java,
				</include.tests>
				<exclude.tests>
					**/AnalysisExecutionServiceGalaxyIT.java,
				</exclude.tests>
				<jetty.skip>true</jetty.skip>
			</properties>
		</profile>
		<profile>
			<id>galaxy_pipeline_testing</id>
			<properties>
				<integration.test.listener>ca.corefacility.bioinformatics.irida.web.controller.test.listeners.IntegrationTestListener</integration.test.listener>
				<include.tests>
					**/AnalysisExecutionScheduledTaskImplIT.java,
					**/AnalysisExecutionServiceGalaxyIT.java,
					**/SNVPhylAnalysisIT.java,
				</include.tests>
				<jetty.skip>true</jetty.skip>
			</properties>
		</profile>
		<profile>
			<id>all_testing</id>
			<properties>
				<integration.test.listener>ca.corefacility.bioinformatics.irida.web.controller.test.listeners.IntegrationUITestListener</integration.test.listener>
				<include.tests>**/*IT.java, **/IT*.java</include.tests>
			</properties>
		</profile>
	</profiles>
</project>
